{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","useFetchGifs","loading","state","setstate","useEffect","then","imgs","setTimeout","GifGridItem","className","src","alt","GifGrid","key","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACdC,mBAAS,IADK,mBAC3CC,EAD2C,KAC/BC,EAD+B,KAgBlD,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,GAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,SAOtC,2BACEC,KAAK,OACLC,MAAQT,EACRU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAkBnBG,YAAY,sB,uBCLLC,EAnBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,0DACiDC,UAAUH,GAD3D,sDAGKI,MAAOF,GAHZ,cAGRG,EAHQ,gBAISA,EAAKC,OAJd,uBAINC,EAJM,EAINA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAIrCa,QAAQC,IAAIR,GAdE,kBAePA,GAfO,4CAAH,sDC8BES,EA5BM,SAAEjB,GAAe,IAAD,EAETf,mBAAS,CACjCsB,KAAM,GACNW,SAAS,IAJwB,mBAE5BC,EAF4B,KAErBC,EAFqB,KAyBnC,OAlBAC,qBAAU,WAERtB,EAASC,GACRsB,MAAK,SAACC,GAEHH,EAAS,CACPb,KAAMgB,EACNL,SAAS,SAKd,CAAElB,IAGLwB,YAAW,cACR,KAEIL,GCfMM,G,MAVK,SAAC,GAAwB,EAArBd,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACE,yBAAKwB,UAAU,0CACb,yBAAKC,IAAMzB,EAAK0B,IAAKhB,IACrB,+BAAMA,EAAN,QCJOiB,EAAU,SAAC,GAAkB,IAAhB7B,EAAe,EAAfA,SAAe,EAENiB,EAAcjB,GAAjCa,EAFyB,EAE/BN,KAAcW,EAFiB,EAEjBA,QAEtB,OACE,oCACE,wBAAIQ,UAAU,sCAAd,IAAsD1B,EAAtD,KAEEkB,GAAW,uBAAGQ,UAAU,qCAAb,iBAEb,yBAAKA,UAAU,aAEXb,GAAUA,EAAOJ,KAAI,SAAEC,GAAF,OACnB,kBAAC,EAAD,eACEoB,IAAQpB,EAAIC,IACRD,UCaHqB,EA5BM,SAACC,GAAU,MAGM/C,mBAAS,CAAC,SAHhB,mBAGvBgD,EAHuB,KAGXjD,EAHW,KAK9B,OADA+B,QAAQC,IAAIiB,GAEV,oCACE,8CACA,kBAAC,EAAD,CAAajD,cAAkBA,IAC/B,6BAEA,4BAEIiD,EAAWxB,KAAI,SAACT,GAAD,OAEX,kBAAC,EAAD,CACEA,SAAYA,EACZ8B,IAAQ9B,UChBxBkC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9ffa13d1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n  const [inputValue, setinputValue] = useState('')\r\n  \r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if ( inputValue.trim().length > 2 ) {\r\n      setCategories(cats => [inputValue, ...cats]);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type='text'\r\n        value={ inputValue }\r\n        onChange= { handleInputChange }\r\n        placeholder='Escribe aqui...'\r\n      />\r\n      {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n    </form>\r\n  )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\nconst getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=pHp3uRjZmGLKx39GlQXwiNkwPrJFnlk9`\r\n\r\n  const resp = await fetch( url );\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url\r\n    }\r\n  })\r\n  \r\n  console.log(gifs);\r\n  return gifs;\r\n  \r\n}\r\n\r\nexport default getGifs;","import { useState, useEffect } from 'react'\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nconst useFetchGifs = ( category ) => {\r\n\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(()=>{ //Efectos no pueden ser async\r\n\r\n    getGifs( category )\r\n    .then((imgs) => {\r\n\r\n        setstate({\r\n          data: imgs,\r\n          loading: false\r\n        })\r\n\r\n    })\r\n\r\n  }, [ category ])\r\n\r\n\r\n  setTimeout(() => {\r\n  }, 3000);\r\n\r\n  return state;\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React from 'react'\r\nimport 'animate.css'\r\n\r\nconst GifGridItem = ( { id, title, url} ) => {\r\n\r\n  return (\r\n    <div className='card animate__zoomIn animate__animated'>\r\n      <img src={ url} alt={title} />\r\n      <p> { title } </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading} = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__fadeIn animate__animated '> { category } </h3>\r\n\r\n      { loading && <p className='animate__flash animate__animated '> Cargando... </p> }\r\n\r\n      <div className='card-grid'>\r\n        {\r\n          images && images.map(( img ) => \r\n            <GifGridItem \r\n              key = { img.id }\r\n              {...img} \r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = (props) => {\r\n\r\n  // const categories = ['Dark', 'Black Mirror', 'The OA']\r\n  const [categories, setCategories] = useState(['Dark']);\r\n  console.log(categories);\r\n  return (\r\n    <>\r\n      <h2> GifExpertApp </h2>\r\n      <AddCategory setCategories = { setCategories } />\r\n      <hr/>\r\n\r\n      <ol>\r\n        {\r\n          categories.map((category)=> \r\n            (\r\n              <GifGrid \r\n                category= { category } \r\n                key = { category }\r\n              />\r\n            )\r\n          )\r\n        }\r\n      </ol>\r\n\r\n    </>\r\n  )\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nReactDOM.render(\r\n  <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}